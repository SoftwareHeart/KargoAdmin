@model BlogEditViewModel

@{
    ViewData["Title"] = "Blog Düzenle";
    Layout = "_AdminLayout";
}

<link href="~/css/admin-edit.css" rel="stylesheet" asp-append-version="true" />

<div class="blog-edit-container">
    <!-- Header -->
    <div class="edit-header">
        <div class="container-fluid">
            <div class="edit-header-content">
                <h1 class="edit-title">
                    <i class="fas fa-edit me-2"></i>Blog Düzenle
                </h1>
                <p class="edit-subtitle">
                    Blog yazınızı düzenleyin ve güncelleyin - ID: #@Model.Id
                </p>
                <div class="edit-breadcrumb">
                    <a href="/Admin">
                        <i class="fas fa-home"></i> Dashboard
                    </a>
                    <span class="separator">/</span>
                    <a href="@Url.Action("Index", "Blog")">
                        <i class="fas fa-blog"></i> Blog Listesi
                    </a>
                    <span class="separator">/</span>
                    <span>Düzenle</span>
                </div>
            </div>
        </div>
    </div>

    <!-- Ana Form Container -->
    <div class="edit-form-container">
        <form asp-action="Edit" enctype="multipart/form-data" class="edit-form" id="blogEditForm">
            <div class="edit-form-body">
				<!-- Validation Summary -->
				<div asp-validation-summary="ModelOnly" class="alert alert-danger @(ViewData.ModelState.IsValid ? "d-none" : "")" role="alert" id="validationSummary"></div>

                <div class="edit-form-row">
                    <!-- Sol Kolon - Ana İçerik -->
                    <div class="edit-main-content">
                        <!-- Hidden Fields -->
                        <input type="hidden" asp-for="Id" />
                        <input type="hidden" asp-for="ExistingImageUrl" />

                        <!-- Blog Başlığı -->
                        <div class="edit-form-group">
                            <label asp-for="Title" class="edit-form-label">
                                <i class="fas fa-heading"></i>
                                Blog Başlığı (Türkçe)
                            </label>
                            <input asp-for="Title"
                                   class="edit-form-control"
                                   placeholder="Etkileyici bir başlık yazın..."
                                   maxlength="100"
                                   id="titleInput"
                                   required />
                            <span asp-validation-for="Title" class="text-danger"></span>

                            <div class="edit-progress-wrapper">
                                <div class="edit-counter">
                                    <span class="edit-counter-text">SEO için ideal: 50-60 karakter</span>
                                    <span class="edit-counter-number" id="titleCounter">0/100</span>
                                </div>
                                <div class="edit-progress">
                                    <div class="edit-progress-bar" id="titleProgress"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Blog Başlığı - İngilizce -->
                        <div class="edit-form-group">
                            <label asp-for="TitleEn" class="edit-form-label">
                                <i class="fas fa-heading"></i>
                                Blog Başlığı (İngilizce) <span class="text-muted">(Opsiyonel)</span>
                            </label>
                            <input asp-for="TitleEn"
                                   class="edit-form-control"
                                   placeholder="Write an impressive title..."
                                   maxlength="100"
                                   id="titleEnInput" />
                            <span asp-validation-for="TitleEn" class="text-danger"></span>

                            <div class="edit-progress-wrapper">
                                <div class="edit-counter">
                                    <span class="edit-counter-text">SEO için ideal: 50-60 karakter</span>
                                    <span class="edit-counter-number" id="titleEnCounter">0/100</span>
                                </div>
                                <div class="edit-progress">
                                    <div class="edit-progress-bar" id="titleEnProgress"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Blog İçeriği -->
                        <div class="edit-form-group">
                            <label asp-for="Content" class="edit-form-label">
                                <i class="fas fa-paragraph"></i>
                                Blog İçeriği (Türkçe)
                            </label>
                            <div class="edit-editor-wrapper">
                                <textarea asp-for="Content"
                                          id="contentEditor"
                                          class="edit-form-control edit-textarea"
                                          placeholder="Blog içeriğinizi buraya yazın..."
                                          required></textarea>
                            <div class="text-danger" data-valmsg-for="Content" data-valmsg-replace="true"></div>
                            </div>
                            <span asp-validation-for="Content" class="text-danger"></span>
                        </div>

                        <!-- Blog İçeriği - İngilizce -->
                        <div class="edit-form-group">
                            <label asp-for="ContentEn" class="edit-form-label">
                                <i class="fas fa-paragraph"></i>
                                Blog İçeriği (İngilizce) <span class="text-muted">(Opsiyonel)</span>
                            </label>
                            <div class="edit-editor-wrapper">
                                <textarea asp-for="ContentEn"
                                          id="contentEnEditor"
                                          class="edit-form-control edit-textarea"
                                          placeholder="Write your blog content here..."></textarea>
                            <div class="text-danger" data-valmsg-for="ContentEn" data-valmsg-replace="true"></div>
                            </div>
                            <span asp-validation-for="ContentEn" class="text-danger"></span>
                        </div>

                        <!-- Meta Açıklama -->
                        <div class="edit-form-group">
                            <label asp-for="MetaDescription" class="edit-form-label">
                                <i class="fas fa-search"></i>
                                SEO Meta Açıklaması (Türkçe)
                            </label>
                            <textarea asp-for="MetaDescription"
                                      class="edit-form-control edit-textarea"
                                      rows="3"
                                      placeholder="Arama motorları için kısa bir açıklama yazın..."
                                      maxlength="160"
                                      id="metaInput"></textarea>
                                <span asp-validation-for="MetaDescription" class="text-danger"></span>

                            <div class="edit-progress-wrapper">
                                <div class="edit-counter">
                                    <span class="edit-counter-text">Google'da görünecek açıklama</span>
                                    <span class="edit-counter-number" id="metaCounter">0/160</span>
                                </div>
                                <div class="edit-progress">
                                    <div class="edit-progress-bar" id="metaProgress"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Meta Açıklama - İngilizce -->
                        <div class="edit-form-group">
                            <label asp-for="MetaDescriptionEn" class="edit-form-label">
                                <i class="fas fa-search"></i>
                                SEO Meta Açıklaması (İngilizce) <span class="text-muted">(Opsiyonel)</span>
                            </label>
                            <textarea asp-for="MetaDescriptionEn"
                                      class="edit-form-control edit-textarea"
                                      rows="3"
                                      placeholder="Write a short description for search engines..."
                                      maxlength="160"
                                      id="metaEnInput"></textarea>
                                <span asp-validation-for="MetaDescriptionEn" class="text-danger"></span>

                            <div class="edit-progress-wrapper">
                                <div class="edit-counter">
                                    <span class="edit-counter-text">Description that will appear on Google</span>
                                    <span class="edit-counter-number" id="metaEnCounter">0/160</span>
                                </div>
                                <div class="edit-progress">
                                    <div class="edit-progress-bar" id="metaEnProgress"></div>
                                </div>
                            </div>
                        </div>

                        <!-- Etiketler -->
                        <div class="edit-form-group">
                            <label asp-for="Tags" class="edit-form-label">
                                <i class="fas fa-tags"></i>
                                Etiketler (Türkçe)
                            </label>
                            <div class="edit-tag-container" id="tagContainer">
                                <input type="text"
                                       class="edit-tag-input"
                                       id="tagInput"
                                       placeholder="Etiket ekleyip Enter'a basın" />
                            </div>
                            <input type="hidden" asp-for="Tags" id="tagsHidden" />
                            <small class="edit-counter-text">
                                <i class="fas fa-lightbulb me-1"></i>
                                Önerilen: teknoloji, lojistik, kargo, dijital, yazılım
                            </small>
                        </div>

                        <!-- Etiketler - İngilizce -->
                        <div class="edit-form-group">
                            <label asp-for="TagsEn" class="edit-form-label">
                                <i class="fas fa-tags"></i>
                                Etiketler (İngilizce) <span class="text-muted">(Opsiyonel)</span>
                            </label>
                            <div class="edit-tag-container" id="tagEnContainer">
                                <input type="text"
                                       class="edit-tag-input"
                                       id="tagEnInput"
                                       placeholder="Add tags and press Enter" />
                            </div>
                            <input type="hidden" asp-for="TagsEn" id="tagsEnHidden" />
                            <small class="edit-counter-text">
                                <i class="fas fa-lightbulb me-1"></i>
                                Recommended: technology, logistics, cargo, digital, software
                            </small>
                        </div>
                    </div>

                    <!-- Sağ Kolon - Yan Panel -->
                    <div class="edit-sidebar">
                        <!-- Yayınlama Durumu -->
                        <div class="edit-sidebar-section">
                            <h3 class="edit-sidebar-title">
                                <i class="fas fa-rocket"></i>
                                Yayınlama
                            </h3>

                            <div class="edit-publish-wrapper">
                                <div class="edit-publish-info">
                                    <h6>Blog Durumu</h6>
                                    <small>Yayın görünürlüğünü kontrol edin</small>
                                </div>
                                <label class="edit-switch">
                                    <input asp-for="IsPublished" type="checkbox" id="publishSwitch">
                                    <span class="edit-switch-slider"></span>
                                </label>
                            </div>

                            <div class="edit-status-indicator" id="statusIndicator">
                                <i class="fas fa-globe"></i>
                                <span id="statusText">Blog yayında</span>
                            </div>
                        </div>

                        <!-- Kapak Görseli -->
                        <div class="edit-sidebar-section">
                            <h3 class="edit-sidebar-title">
                                <i class="fas fa-image"></i>
                                Kapak Görseli
                            </h3>

                            <div class="edit-image-wrapper">
                                @if (!string.IsNullOrEmpty(Model.ExistingImageUrl))
                                {
                                    <img id="imagePreview"
                                         src="/uploads/@Model.ExistingImageUrl"
                                         class="edit-image-preview"
                                         alt="Mevcut görsel" />
                                    <div class="edit-image-actions">
                                        <button type="button" class="edit-image-btn primary" id="changeImageBtn">
                                            <i class="fas fa-edit"></i> Değiştir
                                        </button>
                                        <button type="button" class="edit-image-btn danger" id="removeImageBtn">
                                            <i class="fas fa-trash"></i> Kaldır
                                        </button>
                                    </div>
                                    <div class="edit-dropzone edit-hidden" id="dropZone">
                                        <i class="fas fa-cloud-upload-alt"></i>
                                        <p>Görsel yüklemek için tıklayın</p>
                                        <small>veya sürükleyip bırakın</small>
                                    </div>
                                }
                                else
                                {
                                    <div class="edit-dropzone" id="dropZone">
                                        <i class="fas fa-cloud-upload-alt"></i>
                                        <p>Görsel yüklemek için tıklayın</p>
                                        <small>veya sürükleyip bırakın</small>
                                    </div>
                                    <img id="imagePreview" src="" class="edit-image-preview edit-hidden" />
                                }

                                <input type="file" name="ImageFile" id="imageFile" class="edit-hidden" accept="image/*" />

                                <div class="edit-image-actions">
                                    <button type="button" class="edit-image-btn primary" id="selectImageBtn">
                                        <i class="fas fa-plus"></i> Görsel Seç
                                    </button>
                                </div>

                                <small class="edit-counter-text">
                                    <i class="fas fa-info-circle me-1"></i>
                                    <strong>Önerilen:</strong> 1200x630px • <strong>Maks:</strong> 5MB
                                </small>
                            </div>
                        </div>
                        <div class="edit-sidebar-section">
                            <h3 class="edit-sidebar-title">
                                <i class="fas fa-layer-group"></i>
                                İçerik Türü
                            </h3>

                            <div class="edit-type-wrapper">
                                <div class="edit-type-info">
                                    <h6>Bu içerik nedir?</h6>
                                    <small>Haber mi yoksa faydalı bilgi mi?</small>
                                </div>

                                <div class="edit-type-selection">
                                    <div class="edit-type-option">
                                        <input asp-for="Type" type="radio" id="editTypeHaber" value="Haber" class="edit-type-radio">
                                        <label for="editTypeHaber" class="edit-type-label">
                                            <i class="fas fa-newspaper"></i>
                                            <span>Haber</span>
                                            <small>Güncel haberler ve duyurular</small>
                                        </label>
                                    </div>

                                    <div class="edit-type-option">
                                        <input asp-for="Type" type="radio" id="editTypeFaydaliBilgi" value="Faydalı Bilgi" class="edit-type-radio">
                                        <label for="editTypeFaydaliBilgi" class="edit-type-label">
                                            <i class="fas fa-lightbulb"></i>
                                            <span>Faydalı Bilgi</span>
                                            <small>Rehberler ve ipuçları</small>
                                        </label>
                                    </div>
                                </div>

                                <span asp-validation-for="Type" class="text-danger"></span>
                            </div>
                        </div>
                        <!-- İstatistikler -->
                        <div class="edit-sidebar-section">
                            <h3 class="edit-sidebar-title">
                                <i class="fas fa-chart-line"></i>
                                İstatistikler
                            </h3>

                            <div class="edit-stats-grid">
                                <div class="edit-stat-item">
                                    <i class="fas fa-eye edit-stat-icon views"></i>
                                    <div class="edit-stat-number">@(ViewBag.ViewCount ?? 0)</div>
                                    <div class="edit-stat-label">Görüntülenme</div>
                                </div>
                                <div class="edit-stat-item">
                                    <i class="fas fa-calendar edit-stat-icon time"></i>
                                    <div class="edit-stat-number">
                                        @{
                                            var daysDiff = (DateTime.Now - DateTime.Now).Days;
                                            var displayDays = daysDiff >= 0 ? daysDiff : 0;
                                        }
                                        @displayDays
                                    </div>
                                    <div class="edit-stat-label">Gün Önce</div>
                                </div>
                            </div>
                        </div>

                        <!-- SEO Önizleme -->
                        <div class="edit-sidebar-section">
                            <h3 class="edit-sidebar-title">
                                <i class="fab fa-google"></i>
                                SEO Önizleme
                            </h3>

                            <div class="edit-seo-preview">
                                <div class="edit-seo-url">
                                    <i class="fas fa-link"></i>
                                    yoursite.com/blog/@Model.Id
                                </div>
                                <h4 class="edit-seo-title" id="seoTitle">
                                    @(string.IsNullOrEmpty(Model.Title) ? "Blog başlığı..." : Model.Title)
                                </h4>
                                <p class="edit-seo-description" id="seoDescription">
                                    @(string.IsNullOrEmpty(Model.MetaDescription) ? "Meta açıklaması eklenmemiş..." : Model.MetaDescription)
                                </p>
                            </div>
                        </div>

                        <!-- Hızlı Eylemler -->
                        <div class="edit-sidebar-section">
                            <h3 class="edit-sidebar-title">
                                <i class="fas fa-bolt"></i>
                                Hızlı Eylemler
                            </h3>

                            <div class="d-grid gap-2">
                                <a href="@Url.Action("Details", "Blog", new { id = Model.Id })"
                                   class="edit-image-btn primary"
                                   target="_blank">
                                    <i class="fas fa-eye"></i> Önizleme
                                </a>
                                <a href="@Url.Action("Index", "Blog")"
                                   class="edit-image-btn">
                                    <i class="fas fa-list"></i> Blog Listesi
                                </a>
                                <button type="button"
                                        class="edit-image-btn"
                                        onclick="window.history.back()">
                                    <i class="fas fa-arrow-left"></i> Geri Dön
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Form Actions -->
            <div class="edit-actions">
                <div class="edit-save-info">
                    <i class="fas fa-info-circle"></i>
                    <span>Ctrl+S ile hızlı kaydet • Değişiklikler otomatik kontrol edilir</span>
                </div>
                <div class="edit-action-buttons">
                    <a href="@Url.Action("Index", "Blog")" class="edit-btn edit-btn-secondary">
                        <i class="fas fa-times"></i>
                        İptal
                    </a>
                    <button type="submit" class="edit-btn edit-btn-primary" id="saveButton">
                        <i class="fas fa-save"></i>
                        <span id="saveText">Değişiklikleri Kaydet</span>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Success/Error Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999;">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-success text-white">
                <i class="fas fa-check-circle me-2"></i>
                <strong class="me-auto">Başarılı</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["SuccessMessage"]
            </div>
        </div>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="toast-container position-fixed top-0 end-0 p-3" style="z-index: 9999;">
        <div class="toast show" role="alert" aria-live="assertive" aria-atomic="true">
            <div class="toast-header bg-danger text-white">
                <i class="fas fa-exclamation-circle me-2"></i>
                <strong class="me-auto">Hata</strong>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="toast" aria-label="Close"></button>
            </div>
            <div class="toast-body">
                @TempData["ErrorMessage"]
            </div>
        </div>
    </div>
}

@section Scripts {
    <script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>
    <partial name="_ValidationScriptsPartial" />
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            console.log('🚀 Modern Blog Edit sayfası başlatılıyor...');

            // ===== CKEditor Başlatma =====
            let editor;
            let editorEn;
            
            // Türkçe CKEditor
            ClassicEditor
                .create(document.querySelector('#contentEditor'), {
                    toolbar: {
                        items: [
                            'heading', '|',
                            'bold', 'italic', 'strikethrough', 'underline', 'link', '|',
                            'bulletedList', 'numberedList', '|',
                            'outdent', 'indent', '|',
                            'blockQuote', 'insertTable', 'horizontalLine', '|',
                            'undo', 'redo'
                        ]
                    },
                    language: 'tr',
                    placeholder: 'Blog içeriğinizi buraya yazın...',
                    heading: {
                        options: [
                            { model: 'paragraph', title: 'Paragraf', class: 'ck-heading_paragraph' },
                            { model: 'heading1', view: 'h1', title: 'Başlık 1', class: 'ck-heading_heading1' },
                            { model: 'heading2', view: 'h2', title: 'Başlık 2', class: 'ck-heading_heading2' },
                            { model: 'heading3', view: 'h3', title: 'Başlık 3', class: 'ck-heading_heading3' }
                        ]
                    }
                })
                .then(newEditor => {
                    editor = newEditor;

                    // Editor yüksekliği ayarla
                    const editingView = editor.editing.view;
                    editingView.change(writer => {
                        writer.setStyle('min-height', '400px', editingView.document.getRoot());
                    });

                    console.log('✅ Türkçe CKEditor başarıyla yüklendi');
                })
                .catch(error => {
                    console.error('❌ Türkçe CKEditor Error:', error);
                });

            // İngilizce CKEditor
            ClassicEditor
                .create(document.querySelector('#contentEnEditor'), {
                    toolbar: {
                        items: [
                            'heading', '|',
                            'bold', 'italic', 'strikethrough', 'underline', 'link', '|',
                            'bulletedList', 'numberedList', '|',
                            'outdent', 'indent', '|',
                            'blockQuote', 'insertTable', 'horizontalLine', '|',
                            'undo', 'redo'
                        ]
                    },
                    language: 'en',
                    placeholder: 'Write your blog content here...',
                    heading: {
                        options: [
                            { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                            { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                            { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                            { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' }
                        ]
                    }
                })
                .then(newEditor => {
                    editorEn = newEditor;

                    // Editor yüksekliği ayarla
                    const editingView = editorEn.editing.view;
                    editingView.change(writer => {
                        writer.setStyle('min-height', '400px', editingView.document.getRoot());
                    });

                    console.log('✅ İngilizce CKEditor başarıyla yüklendi');
                })
                .catch(error => {
                    console.error('❌ İngilizce CKEditor Error:', error);
                });

            // ===== Başlık Sayacı ve Progress =====
            const titleInput = document.getElementById('titleInput');
            const titleCounter = document.getElementById('titleCounter');
            const titleProgress = document.getElementById('titleProgress');
            const seoTitle = document.getElementById('seoTitle');

            const titleEnInput = document.getElementById('titleEnInput');
            const titleEnCounter = document.getElementById('titleEnCounter');
            const titleEnProgress = document.getElementById('titleEnProgress');

            function updateTitleProgress() {
                const length = titleInput.value.length;
                const percentage = Math.min((length / 100) * 100, 100);

                titleCounter.textContent = `${length}/100`;
                titleProgress.style.width = `${percentage}%`;

                // Renk sistemi
                titleCounter.className = 'edit-counter-number';
                if (length < 30) {
                    titleProgress.className = 'edit-progress-bar danger';
                    titleCounter.classList.add('danger');
                } else if (length >= 30 && length < 50) {
                    titleProgress.className = 'edit-progress-bar warning';
                    titleCounter.classList.add('warning');
                } else if (length >= 50 && length <= 60) {
                    titleProgress.className = 'edit-progress-bar success';
                    titleCounter.classList.add('success');
                } else if (length <= 100) {
                    titleProgress.className = 'edit-progress-bar info';
                    titleCounter.classList.add('info');
                } else {
                    titleProgress.className = 'edit-progress-bar danger';
                    titleCounter.classList.add('danger');
                }

                // SEO önizleme güncelle
                seoTitle.textContent = titleInput.value || 'Blog başlığı...';
            }

            if (titleInput) {
                titleInput.addEventListener('input', updateTitleProgress);
                updateTitleProgress(); // İlk yükleme
            }

            // ===== İngilizce Başlık Sayacı ve Progress =====
            function updateTitleEnProgress() {
                const length = titleEnInput.value.length;
                const percentage = Math.min((length / 100) * 100, 100);

                titleEnCounter.textContent = `${length}/100`;
                titleEnProgress.style.width = `${percentage}%`;

                // Renk sistemi
                titleEnCounter.className = 'edit-counter-number';
                if (length < 30) {
                    titleEnProgress.className = 'edit-progress-bar danger';
                    titleEnCounter.classList.add('danger');
                } else if (length >= 30 && length < 50) {
                    titleEnProgress.className = 'edit-progress-bar warning';
                    titleEnCounter.classList.add('warning');
                } else if (length >= 50 && length <= 60) {
                    titleEnProgress.className = 'edit-progress-bar success';
                    titleEnCounter.classList.add('success');
                } else if (length <= 100) {
                    titleEnProgress.className = 'edit-progress-bar info';
                    titleEnCounter.classList.add('info');
                } else {
                    titleEnProgress.className = 'edit-progress-bar danger';
                    titleEnCounter.classList.add('danger');
                }
            }

            if (titleEnInput) {
                titleEnInput.addEventListener('input', updateTitleEnProgress);
                updateTitleEnProgress(); // İlk yükleme
            }

            // ===== Meta Açıklama Sayacı =====
            const metaInput = document.getElementById('metaInput');
            const metaCounter = document.getElementById('metaCounter');
            const metaProgress = document.getElementById('metaProgress');
            const seoDescription = document.getElementById('seoDescription');

            const metaEnInput = document.getElementById('metaEnInput');
            const metaEnCounter = document.getElementById('metaEnCounter');
            const metaEnProgress = document.getElementById('metaEnProgress');

            function updateMetaProgress() {
                const length = metaInput.value.length;
                const percentage = Math.min((length / 160) * 100, 100);

                metaCounter.textContent = `${length}/160`;
                metaProgress.style.width = `${percentage}%`;

                // Renk sistemi
                metaCounter.className = 'edit-counter-number';
                if (length <= 120) {
                    metaProgress.className = 'edit-progress-bar success';
                    metaCounter.classList.add('success');
                } else if (length <= 155) {
                    metaProgress.className = 'edit-progress-bar info';
                    metaCounter.classList.add('info');
                } else if (length <= 160) {
                    metaProgress.className = 'edit-progress-bar warning';
                    metaCounter.classList.add('warning');
                } else {
                    metaProgress.className = 'edit-progress-bar danger';
                    metaCounter.classList.add('danger');
                }

                // SEO önizleme güncelle
                seoDescription.textContent = metaInput.value || 'Meta açıklaması eklenmemiş...';
            }

            if (metaInput) {
                metaInput.addEventListener('input', updateMetaProgress);
                updateMetaProgress(); // İlk yükleme
            }

            // ===== İngilizce Meta Açıklama Sayacı =====
            function updateMetaEnProgress() {
                const length = metaEnInput.value.length;
                const percentage = Math.min((length / 160) * 100, 100);

                metaEnCounter.textContent = `${length}/160`;
                metaEnProgress.style.width = `${percentage}%`;

                // Renk sistemi
                metaEnCounter.className = 'edit-counter-number';
                if (length <= 120) {
                    metaEnProgress.className = 'edit-progress-bar success';
                    metaEnCounter.classList.add('success');
                } else if (length <= 155) {
                    metaEnProgress.className = 'edit-progress-bar info';
                    metaEnCounter.classList.add('info');
                } else if (length <= 160) {
                    metaEnProgress.className = 'edit-progress-bar warning';
                    metaEnCounter.classList.add('warning');
                } else {
                    metaEnProgress.className = 'edit-progress-bar danger';
                    metaEnCounter.classList.add('danger');
                }
            }

            if (metaEnInput) {
                metaEnInput.addEventListener('input', updateMetaEnProgress);
                updateMetaEnProgress(); // İlk yükleme
            }

            // ===== Tag Sistemi =====
            const tagContainer = document.getElementById('tagContainer');
            const tagInput = document.getElementById('tagInput');
            const tagsHidden = document.getElementById('tagsHidden');
            let tags = [];

            const tagEnContainer = document.getElementById('tagEnContainer');
            const tagEnInput = document.getElementById('tagEnInput');
            const tagsEnHidden = document.getElementById('tagsEnHidden');
            let tagsEn = [];

            // Mevcut etiketleri yükle
            if (tagsHidden && tagsHidden.value) {
                tags = tagsHidden.value.split(',').filter(tag => tag.trim());
                renderTags();
            }

            // Mevcut İngilizce etiketleri yükle
            if (tagsEnHidden && tagsEnHidden.value) {
                tagsEn = tagsEnHidden.value.split(',').filter(tag => tag.trim());
                renderTagsEn();
            }

            function renderTags() {
                // Mevcut tag'leri temizle
                const existingTags = tagContainer.querySelectorAll('.edit-tag-item');
                existingTags.forEach(tag => tag.remove());

                // Yeni tag'leri ekle
                tags.forEach((tag, index) => {
                    const tagElement = document.createElement('div');
                    tagElement.className = 'edit-tag-item edit-fade-in';
                    tagElement.innerHTML = `
                        <span>${tag}</span>
                        <span class="edit-tag-remove" data-index="${index}">
                            <i class="fas fa-times"></i>
                        </span>
                    `;
                    tagContainer.insertBefore(tagElement, tagInput);
                });

                // Hidden input güncelle
                if (tagsHidden) {
                    tagsHidden.value = tags.join(',');
                }
            }

            function addTag(tagText) {
                const tag = tagText.trim().toLowerCase();
                if (tag && !tags.includes(tag) && tags.length < 10) {
                    tags.push(tag);
                    renderTags();
                    if (tagInput) {
                        tagInput.value = '';
                    }
                }
            }

            function removeTag(index) {
                tags.splice(index, 1);
                renderTags();
            }

            if (tagInput) {
                tagInput.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' || e.key === ',') {
                        e.preventDefault();
                        addTag(this.value);
                    } else if (e.key === 'Backspace' && !this.value && tags.length > 0) {
                        removeTag(tags.length - 1);
                    }
                });

                tagInput.addEventListener('blur', function() {
                    if (this.value.trim()) {
                        addTag(this.value);
                    }
                });
            }

            if (tagContainer) {
                tagContainer.addEventListener('click', function(e) {
                    const removeBtn = e.target.closest('.edit-tag-remove');
                    if (removeBtn) {
                        const index = parseInt(removeBtn.dataset.index);
                        removeTag(index);
                    }
                });
            }

            // ===== İngilizce Tag Sistemi =====
            function renderTagsEn() {
                // Mevcut tag'leri temizle
                const existingTags = tagEnContainer.querySelectorAll('.edit-tag-item');
                existingTags.forEach(tag => tag.remove());

                // Yeni tag'leri ekle
                tagsEn.forEach((tag, index) => {
                    const tagElement = document.createElement('div');
                    tagElement.className = 'edit-tag-item edit-fade-in';
                    tagElement.innerHTML = `
                        <span>${tag}</span>
                        <span class="edit-tag-remove" data-index="${index}">
                            <i class="fas fa-times"></i>
                        </span>
                    `;
                    tagEnContainer.insertBefore(tagElement, tagEnInput);
                });

                // Hidden input güncelle
                if (tagsEnHidden) {
                    tagsEnHidden.value = tagsEn.join(',');
                }
            }

            function addTagEn(tagText) {
                const tag = tagText.trim().toLowerCase();
                if (tag && !tagsEn.includes(tag) && tagsEn.length < 10) {
                    tagsEn.push(tag);
                    renderTagsEn();
                    if (tagEnInput) {
                        tagEnInput.value = '';
                    }
                }
            }

            function removeTagEn(index) {
                tagsEn.splice(index, 1);
                renderTagsEn();
            }

            if (tagEnInput) {
                tagEnInput.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' || e.key === ',') {
                        e.preventDefault();
                        addTagEn(this.value);
                    } else if (e.key === 'Backspace' && !this.value && tagsEn.length > 0) {
                        removeTagEn(tagsEn.length - 1);
                    }
                });

                tagEnInput.addEventListener('blur', function() {
                    if (this.value.trim()) {
                        addTagEn(this.value);
                    }
                });
            }

            if (tagEnContainer) {
                tagEnContainer.addEventListener('click', function(e) {
                    const removeBtn = e.target.closest('.edit-tag-remove');
                    if (removeBtn) {
                        const index = parseInt(removeBtn.dataset.index);
                        removeTagEn(index);
                    }
                });
            }

            // ===== Yayınlama Switch =====
            const publishSwitch = document.getElementById('publishSwitch');
            const statusIndicator = document.getElementById('statusIndicator');
            const statusText = document.getElementById('statusText');

            function updatePublishStatus() {
                if (publishSwitch && statusIndicator && statusText) {
                    if (publishSwitch.checked) {
                        statusIndicator.className = 'edit-status-indicator edit-status-published';
                        statusText.innerHTML = '<i class="fas fa-globe"></i> Blog yayında ve herkese açık';
                    } else {
                        statusIndicator.className = 'edit-status-indicator edit-status-draft';
                        statusText.innerHTML = '<i class="fas fa-lock"></i> Blog taslak halinde';
                    }
                }
            }

            if (publishSwitch) {
                publishSwitch.addEventListener('change', updatePublishStatus);
                updatePublishStatus(); // İlk yükleme
            }

            // ===== Görsel Yükleme Sistemi =====
            const imageFile = document.getElementById('imageFile');
            const imagePreview = document.getElementById('imagePreview');
            const dropZone = document.getElementById('dropZone');
            const selectImageBtn = document.getElementById('selectImageBtn');
            const changeImageBtn = document.getElementById('changeImageBtn');
            const removeImageBtn = document.getElementById('removeImageBtn');

            // Buton click event'leri
            selectImageBtn?.addEventListener('click', () => imageFile?.click());
            changeImageBtn?.addEventListener('click', () => imageFile?.click());
            dropZone?.addEventListener('click', () => imageFile?.click());

            // Dosya seçimi
            if (imageFile) {
                imageFile.addEventListener('change', function(e) {
                    const file = e.target.files[0];
                    if (file) {
                        // Dosya validasyonu
                        if (file.size > 5 * 1024 * 1024) {
                            alert('⚠️ Dosya boyutu 5MB\'dan büyük olamaz!');
                            this.value = '';
                            return;
                        }

                        if (!file.type.startsWith('image/')) {
                            alert('⚠️ Lütfen geçerli bir resim dosyası seçin!');
                            this.value = '';
                            return;
                        }

                        // Önizleme oluştur
                        const reader = new FileReader();
                        reader.onload = function(e) {
                            if (imagePreview) {
                                imagePreview.src = e.target.result;
                                imagePreview.classList.remove('edit-hidden');
                            }
                            if (dropZone) {
                                dropZone.classList.add('edit-hidden');
                            }
                        };
                        reader.readAsDataURL(file);
                    }
                });
            }

            // Görsel kaldırma
            removeImageBtn?.addEventListener('click', function() {
                if (imagePreview) {
                    imagePreview.src = '';
                    imagePreview.classList.add('edit-hidden');
                }
                if (dropZone) {
                    dropZone.classList.remove('edit-hidden');
                }
                if (imageFile) {
                    imageFile.value = '';
                }

                // Mevcut görseli silmek için hidden input ekle
                let deleteInput = document.querySelector('input[name="DeleteExistingImage"]');
                if (!deleteInput) {
                    deleteInput = document.createElement('input');
                    deleteInput.type = 'hidden';
                    deleteInput.name = 'DeleteExistingImage';
                    document.getElementById('blogEditForm').appendChild(deleteInput);
                }
                deleteInput.value = 'true';
            });

            // Drag & Drop işlevselliği
            if (dropZone) {
                ['dragenter', 'dragover', 'dragleave', 'drop'].forEach(eventName => {
                    dropZone.addEventListener(eventName, preventDefaults, false);
                });

                function preventDefaults(e) {
                    e.preventDefault();
                    e.stopPropagation();
                }

                ['dragenter', 'dragover'].forEach(eventName => {
                    dropZone.addEventListener(eventName, function() {
                        this.classList.add('dragover');
                    }, false);
                });

                ['dragleave', 'drop'].forEach(eventName => {
                    dropZone.addEventListener(eventName, function() {
                        this.classList.remove('dragover');
                    }, false);
                });

                dropZone.addEventListener('drop', function(e) {
                    const dt = e.dataTransfer;
                    const files = dt.files;

                    if (files.length > 0 && imageFile) {
                        imageFile.files = files;
                        const event = new Event('change', { bubbles: true });
                        imageFile.dispatchEvent(event);
                    }
                }, false);
            }

            // ===== Form Gönderme ve Kaydetme =====
            const form = document.getElementById('blogEditForm');
            const saveButton = document.getElementById('saveButton');
            const saveText = document.getElementById('saveText');

            if (form && saveButton && saveText) {
                form.addEventListener('submit', function(e) {
                    // Form validasyonu
                    if (!form.checkValidity()) {
                        e.preventDefault();
                        e.stopPropagation();
                        form.classList.add('was-validated');
                        return;
                    }

                    // Değişiklikleri sıfırla (uyarı çıkmaması için)
                    resetChangeDetection();

                    // Loading state
                    saveButton.classList.add('loading');
                    saveButton.disabled = true;
                    saveText.textContent = 'Kaydediliyor...';

                    // Icon'u döndür
                    const icon = saveButton.querySelector('i');
                    if (icon) {
                        icon.className = 'fas fa-spinner fa-spin';
                    }

                    console.log('💾 Form gönderiliyor...');
                });
            }

            // Keyboard shortcuts
            document.addEventListener('keydown', function(e) {
                // Ctrl+S ile kaydetme
                if ((e.ctrlKey || e.metaKey) && e.key === 's') {
                    e.preventDefault();

                    console.log('⌨️ Ctrl+S ile kaydetme tetiklendi');

                    // Değişiklikleri sıfırla
                    resetChangeDetection();

                    if (form) {
                        // Form submit'i tetikle
                        const submitEvent = new Event('submit', { bubbles: true, cancelable: true });
                        form.dispatchEvent(submitEvent);

                        // Eğer event cancel edilmediyse formu gönder
                        if (!submitEvent.defaultPrevented) {
                            form.submit();
                        }
                    }
                }

                // Esc ile iptal
                if (e.key === 'Escape') {
                    if (confirm('Değişiklikleri kaydetmeden çıkmak istediğinize emin misiniz?')) {
                        window.location.href = '@Url.Action("Index", "Blog")';
                    }
                }
            });

            // ===== Auto-save İndikasyonu =====
            let autoSaveTimeout;
            let hasChanges = false;
            let initialFormData = new FormData(form); // İlk form durumunu kaydet

            function markAsChanged() {
                if (!hasChanges) {
                    hasChanges = true;
                    console.log('📝 Form değişikliği algılandı');
                }

                clearTimeout(autoSaveTimeout);
                autoSaveTimeout = setTimeout(() => {
                    if (hasChanges) {
                        showAutoSaveIndicator();
                    }
                }, 3000);
            }

            function showAutoSaveIndicator() {
                const saveInfo = document.querySelector('.edit-save-info span');
                if (saveInfo) {
                    const originalText = saveInfo.textContent;
                    saveInfo.innerHTML = '<i class="fas fa-save text-warning"></i> Değişiklikler algılandı - Kaydetmeyi unutmayın!';
                    saveInfo.style.color = '#f59e0b';

                    setTimeout(() => {
                        if (!hasChanges) { // Eğer kaydedildiyse
                            saveInfo.innerHTML = '<i class="fas fa-check text-success"></i> Değişiklikler kaydedildi!';
                            saveInfo.style.color = '#10b981';

                            setTimeout(() => {
                                saveInfo.textContent = originalText;
                                saveInfo.style.color = '';
                            }, 2000);
                        }
                    }, 100);
                }
            }

            function resetChangeDetection() {
                hasChanges = false;
                clearTimeout(autoSaveTimeout);
                console.log('✅ Form değişiklikleri sıfırlandı');

                // beforeunload uyarısını kaldır
                window.onbeforeunload = null;

                // Kısa bir süre sonra tekrar aktif et
                setTimeout(() => {
                    window.addEventListener('beforeunload', beforeUnloadHandler);
                }, 500);
            }

            // beforeunload handler'ı ayrı tanımla
            function beforeUnloadHandler(e) {
                if (hasChanges) {
                    const message = 'Kaydedilmemiş değişiklikleriniz var. Sayfadan ayrılmak istediğinize emin misiniz?';
                    e.preventDefault();
                    e.returnValue = message;
                    return message;
                }
            }

            // Change detection
            if (titleInput) titleInput.addEventListener('input', markAsChanged);
            if (titleEnInput) titleEnInput.addEventListener('input', markAsChanged);
            if (metaInput) metaInput.addEventListener('input', markAsChanged);
            if (metaEnInput) metaEnInput.addEventListener('input', markAsChanged);
            if (tagInput) tagInput.addEventListener('input', markAsChanged);
            if (tagEnInput) tagEnInput.addEventListener('input', markAsChanged);
            if (publishSwitch) publishSwitch.addEventListener('change', markAsChanged);

            // ===== Toast Bildirimlerini Otomatik Gizle =====
            const toasts = document.querySelectorAll('.toast');
            toasts.forEach(toast => {
                setTimeout(() => {
                    toast.classList.remove('show');
                    setTimeout(() => {
                        toast.remove();
                    }, 300);
                }, 5000);
            });

            // ===== Form Ayrılma Uyarısı =====
            window.addEventListener('beforeunload', function(e) {
                if (hasChanges) {
                    const message = 'Kaydedilmemiş değişiklikleriniz var. Sayfadan ayrılmak istediğinize emin misiniz?';
                    e.preventDefault();
                    e.returnValue = message;
                    return message;
                }
            });

            // Form submit edildiğinde ve sayfa değiştiğinde uyarıyı kaldır
            if (form) {
                form.addEventListener('submit', function() {
                    hasChanges = false;

                    // Kısa bir gecikme ile uyarıyı tamamen devre dışı bırak
                    setTimeout(() => {
                        window.onbeforeunload = null;
                    }, 100);
                });
            }

            // Sayfa yüklendiğinde değişiklikleri sıfırla
            window.addEventListener('load', function() {
                hasChanges = false;
            });

            // Tüm linkler için uyarıyı devre dışı bırak
            document.addEventListener('click', function(e) {
                const link = e.target.closest('a');
                if (link && !hasChanges) {
                    window.onbeforeunload = null;
                }
            });

            // ===== Accessibility İyileştirmeleri =====
            // Enter tuşu ile butonları tetikleme
            document.addEventListener('keydown', function(e) {
                if (e.key === 'Enter' && e.target.type === 'button') {
                    e.target.click();
                }
            });

            // Focus management
            const firstInput = document.querySelector('.edit-form-control');
            if (firstInput && !firstInput.value) {
                setTimeout(() => firstInput.focus(), 100);
            }

            // ===== Debug ve Monitoring =====
            console.log('✅ Blog Edit sayfası tam olarak yüklendi!');
            console.log('📊 Aktif özellikler:');
            console.log('  • CKEditor Rich Text Editor');
            console.log('  • Progress Bar Sayaçları');
            console.log('  • Tag Sistemi');
            console.log('  • Drag & Drop Görsel Yükleme');
            console.log('  • SEO Canlı Önizleme');
            console.log('  • Keyboard Shortcuts (Ctrl+S, Esc)');
            console.log('  • Auto-save Detection');
            console.log('  • Form Validation');
            console.log('  • Toast Notifications');
            console.log('🚀 Sayfa kullanıma hazır!');

            // Performance monitoring
            if (window.performance) {
                const loadTime = window.performance.timing.loadEventEnd - window.performance.timing.navigationStart;
                console.log(`⚡ Sayfa yükleme süresi: ${loadTime}ms`);
            }
        });

        // ===== Hata Yakalama =====
        window.addEventListener('error', function(e) {
            console.error('❌ JavaScript Hatası:', e.error);

            // Kullanıcıya bildir
            const errorToast = document.createElement('div');
            errorToast.className = 'toast-container position-fixed top-0 end-0 p-3';
            errorToast.style.zIndex = '9999';
            errorToast.innerHTML = `
                <div class="toast show" role="alert">
                    <div class="toast-header bg-warning text-dark">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong class="me-auto">Uyarı</strong>
                        <button type="button" class="btn-close" data-bs-dismiss="toast"></button>
                    </div>
                    <div class="toast-body">
                        Bir hata oluştu. Sayfayı yenilemeyi deneyin.
                    </div>
                </div>
            `;
            document.body.appendChild(errorToast);

            setTimeout(() => {
                errorToast.remove();
            }, 5000);
        });

        // ===== Service Worker (Offline Support) =====
        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('/sw.js').then(function(registration) {
                console.log('📱 Service Worker registered:', registration);
            }).catch(function(error) {
                console.log('📱 Service Worker registration failed:', error);
            });
        }
    </script>
}
