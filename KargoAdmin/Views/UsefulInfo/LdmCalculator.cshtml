@using KargoAdmin.Services
@inject ILanguageService LanguageService
@{
    ViewData["Title"] = LanguageService.GetLocalizedText("LDM Hesaplama", "LDM Calculator");
    Layout = "_PublicLayout";
}

<link rel="stylesheet" href="~/css/ldm-calculator.css" asp-append-version="true" />
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css">
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>

<!-- LDM Calculator Section -->
<section class="ldm-calculator-section">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-lg-10">
                <!-- Header -->
                <div class="ldm-header text-center mb-5">
                    <h1 class="ldm-title">
                        @LanguageService.GetLocalizedText("LDM Hesaplayıcı", "LDM Calculator")
                    </h1>
                    <p class="ldm-subtitle">
                        @LanguageService.GetLocalizedText("LDM değerinizi kolayca hesaplayın", "Easily calculate your LDM value")
                    </p>
                </div>

                <!-- Calculator Section -->
                <div class="calculator-section">
                            <div class="row g-4 align-items-stretch">
                                <div class="col-lg-6">
                                    <h5 class="section-title">@LanguageService.GetLocalizedText("Paket Ölçüleri", "Package Dimensions")</h5>
                                    <div class="input-group">
                                        <label>@LanguageService.GetLocalizedText("Uzunluk", "Length") (cm)</label>
                                        <input type="number" id="length" class="form-control calculator-input" placeholder="0" min="0" step="0.1">
                                    </div>
                                    <div class="input-group">
                                        <label>@LanguageService.GetLocalizedText("Genişlik", "Width") (cm)</label>
                                        <input type="number" id="width" class="form-control calculator-input" placeholder="0" min="0" step="0.1">
                                    </div>
                                    <div class="input-group">
                                        <label>@LanguageService.GetLocalizedText("Yükseklik", "Height") (cm)</label>
                                        <input type="number" id="height" class="form-control calculator-input" placeholder="0" min="0" step="0.1">
                                    </div>
                                    <div class="input-group">
                                        <label>@LanguageService.GetLocalizedText("Paket Sayısı", "Quantity")</label>
                                        <input type="number" id="quantity" class="form-control calculator-input" placeholder="1" min="1" step="1" value="1">
                                    </div>
                                    <div class="input-group">
                                        <label>@LanguageService.GetLocalizedText("Birbiri üstüne yüklenebilir mi?", "Stackable?")</label>
                                        <select id="stackable" class="form-select" style="max-width: 220px;">
                                            <option value="yes">@LanguageService.GetLocalizedText("EVET", "YES")</option>
                                            <option value="no">@LanguageService.GetLocalizedText("HAYIR", "NO")</option>
                                        </select>
                                    </div>
                                </div>
                                <div class="col-lg-6">
                                    <div class="result-card h-100 d-flex flex-column">
                                        <h5>@LanguageService.GetLocalizedText("Sonuç", "Result")</h5>
                                        <div class="text-center mb-3" style="font-weight:700; font-size: 2.5rem;">
                                            <span id="ldmBigValue">0.0</span> LDM
                                        </div>
                                        <div class="ldm-visualization mt-auto">
                                            <div class="ldm-legend">
                                                <span id="ldmCapacityText">0.0 / 13.6 LDM</span>
                                                <span id="ldmPercentText">0%</span>
                                            </div>
                                            <div class="truck-visual">
                                                <svg viewBox="0 0 900 350" class="truck-svg">
                                        <!-- Gradients and Definitions -->
                                        <defs>
                                            <linearGradient id="trailerGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                                <stop offset="0%" style="stop-color:#ffffff;stop-opacity:1" />
                                                <stop offset="50%" style="stop-color:#f8f9fa;stop-opacity:1" />
                                                <stop offset="100%" style="stop-color:#e9ecef;stop-opacity:1" />
                                            </linearGradient>
                                            <linearGradient id="cabGradient" x1="0%" y1="0%" x2="0%" y2="100%">
                                                <stop offset="0%" style="stop-color:#0066cc;stop-opacity:1" />
                                                <stop offset="50%" style="stop-color:#005cb9;stop-opacity:1" />
                                                <stop offset="100%" style="stop-color:#004494;stop-opacity:1" />
                                            </linearGradient>
                                            <radialGradient id="wheelGradient" cx="50%" cy="30%" r="70%">
                                                <stop offset="0%" style="stop-color:#6c757d;stop-opacity:1" />
                                                <stop offset="70%" style="stop-color:#495057;stop-opacity:1" />
                                                <stop offset="100%" style="stop-color:#343a40;stop-opacity:1" />
                                            </radialGradient>
                                            <linearGradient id="cargoGradient" x1="0%" y1="0%" x2="100%" y2="0%">
                                                <stop offset="0%" style="stop-color:#28a745;stop-opacity:0.9" />
                                                <stop offset="50%" style="stop-color:#20c997;stop-opacity:0.9" />
                                                <stop offset="100%" style="stop-color:#17a2b8;stop-opacity:0.9" />
                                            </linearGradient>
                                        </defs>
                                        
                                        <!-- Ground shadow -->
                                        <ellipse cx="450" cy="320" rx="420" ry="18" fill="#000000" opacity="0.15"/>
                                        
                                        <!-- Trailer Main Body (Much Bigger) -->
                                        <rect x="70" y="100" width="700" height="160" rx="15" fill="url(#trailerGradient)" stroke="#005cb9" stroke-width="3" class="trailer"/>
                                        
                                        <!-- Trailer Floor -->
                                        <rect x="75" y="250" width="690" height="10" rx="3" fill="#adb5bd" opacity="0.9"/>
                                        <rect x="75" y="255" width="690" height="4" rx="2" fill="#6c757d" opacity="0.7"/>
                                        
                                        <!-- Cargo Area Interior (Much Bigger) -->
                                        <rect x="75" y="105" width="690" height="145" rx="10" fill="#f1f3f5" stroke="#dee2e6" stroke-width="2"/>
                                        
                                        <!-- Cargo fill overlay (Much Bigger) -->
                                        <rect id="cargoFill" x="82" y="112" width="0" height="131" rx="8" fill="url(#cargoGradient)" opacity="0.85" />
                                        
                                        <!-- Cargo Area Ceiling -->
                                        <rect x="75" y="105" width="690" height="7" rx="3" fill="#e9ecef" opacity="0.9"/>
                                        
                                        <!-- Side Rails (Much Bigger) -->
                                        <rect x="75" y="115" width="4" height="130" rx="2" fill="#6c757d" opacity="0.8"/>
                                        <rect x="761" y="115" width="4" height="130" rx="2" fill="#6c757d" opacity="0.8"/>
                                        
                                        <!-- Loading Dock Rear (Much Bigger) -->
                                        <rect x="70" y="115" width="10" height="130" rx="5" fill="#495057"/>
                                        <rect x="72" y="120" width="6" height="120" rx="3" fill="#6c757d" opacity="0.8"/>
                                        
                                        <!-- Cargo Doors (Rear, Bigger) -->
                                        <rect x="72" y="155" width="3" height="50" rx="2" fill="#343a40"/>
                                        <circle cx="73" cy="170" r="1.5" fill="#ffc107"/>
                                        <circle cx="73" cy="190" r="1.5" fill="#ffc107"/>
                                        
                                        <!-- Floor Texture Lines -->
                                        <g opacity="0.4">
                                            <line x1="82" y1="253" x2="758" y2="253" stroke="#6c757d" stroke-width="0.8"/>
                                            <line x1="150" y1="250" x2="150" y2="259" stroke="#6c757d" stroke-width="0.6"/>
                                            <line x1="250" y1="250" x2="250" y2="259" stroke="#6c757d" stroke-width="0.6"/>
                                            <line x1="350" y1="250" x2="350" y2="259" stroke="#6c757d" stroke-width="0.6"/>
                                            <line x1="450" y1="250" x2="450" y2="259" stroke="#6c757d" stroke-width="0.6"/>
                                            <line x1="550" y1="250" x2="550" y2="259" stroke="#6c757d" stroke-width="0.6"/>
                                            <line x1="650" y1="250" x2="650" y2="259" stroke="#6c757d" stroke-width="0.6"/>
                                        </g>
                                        
                                        <!-- Side Wall Support Beams (Much Bigger) -->
                                        <rect x="170" y="108" width="3" height="137" rx="1" fill="#adb5bd" opacity="0.6"/>
                                        <rect x="310" y="108" width="3" height="137" rx="1" fill="#adb5bd" opacity="0.6"/>
                                        <rect x="450" y="108" width="3" height="137" rx="1" fill="#adb5bd" opacity="0.6"/>
                                        <rect x="590" y="108" width="3" height="137" rx="1" fill="#adb5bd" opacity="0.6"/>
                                        <rect x="730" y="108" width="3" height="137" rx="1" fill="#adb5bd" opacity="0.6"/>
                                        
                                        <!-- Truck Cab (Drawn) -->
                                        <g id="truckCab" transform="translate(760,95)">
                                            <!-- Main cab body -->
                                            <rect x="0" y="50" width="120" height="90" rx="12" fill="url(#cabGradient)" stroke="#003d80" stroke-width="3"/>
                                            
                                            <!-- Engine Hood/Motor Area -->
                                            <rect x="110" y="60" width="45" height="80" rx="8" fill="url(#cabGradient)" stroke="#003d80" stroke-width="3"/>
                                            <!-- Hood Lines -->
                                            <line x1="115" y1="70" x2="150" y2="70" stroke="#003d80" stroke-width="1" opacity="0.7"/>
                                            <line x1="115" y1="85" x2="150" y2="85" stroke="#003d80" stroke-width="1" opacity="0.7"/>
                                            <line x1="115" y1="100" x2="150" y2="100" stroke="#003d80" stroke-width="1" opacity="0.7"/>
                                            
                                            <!-- Front Grille (Motor Area) -->
                                            <rect x="150" y="75" width="8" height="50" rx="3" fill="#343a40" stroke="#495057" stroke-width="1"/>
                                            <line x1="154" y1="80" x2="154" y2="120" stroke="#6c757d" stroke-width="1.5"/>
                                            <rect x="151" y="82" width="6" height="3" fill="#6c757d"/>
                                            <rect x="151" y="88" width="6" height="3" fill="#6c757d"/>
                                            <rect x="151" y="94" width="6" height="3" fill="#6c757d"/>
                                            <rect x="151" y="100" width="6" height="3" fill="#6c757d"/>
                                            <rect x="151" y="106" width="6" height="3" fill="#6c757d"/>
                                            <rect x="151" y="112" width="6" height="3" fill="#6c757d"/>
                                            
                                            <!-- Windshield -->
                                            <rect x="10" y="60" width="70" height="35" rx="6" fill="#b3d7ff" stroke="#003d80" stroke-width="2"/>
                                            <line x1="45" y1="60" x2="45" y2="95" stroke="#003d80" stroke-width="1.5" opacity="0.7"/>
                                            
                                            <!-- Side window -->
                                            <rect x="85" y="75" width="20" height="20" rx="4" fill="#b3d7ff" stroke="#003d80" stroke-width="2"/>
                                            
                                            <!-- Side Door -->
                                            <rect x="85" y="100" width="20" height="35" rx="4" fill="#0066cc" stroke="#003d80" stroke-width="2"/>
                                            <circle cx="100" cy="120" r="2" fill="#ffc107"/>
                                            
                                            <!-- Lower Grill/Air Intake -->
                                            <rect x="115" y="125" width="35" height="8" rx="3" fill="#343a40" stroke="#495057" stroke-width="1"/>
                                            <rect x="117" y="127" width="31" height="4" fill="#495057"/>
                                            
                                            <!-- Bumper -->
                                            <rect x="0" y="140" width="155" height="12" rx="6" fill="#6c757d" stroke="#495057" stroke-width="2"/>
                                            
                                            <!-- Headlights -->
                                            <circle cx="145" cy="85" r="8" fill="#fff3cd" stroke="#ffc107" stroke-width="2"/>
                                            <circle cx="145" cy="85" r="5" fill="#ffffff" opacity="0.9"/>
                                            <circle cx="145" cy="110" r="8" fill="#fff3cd" stroke="#ffc107" stroke-width="2"/>
                                            <circle cx="145" cy="110" r="5" fill="#ffffff" opacity="0.9"/>
                                            
                                            <!-- Turn Signals -->
                                            <circle cx="150" cy="65" r="4" fill="#ff8c00" stroke="#e0a800" stroke-width="1"/>
                                            <circle cx="150" cy="130" r="4" fill="#ff8c00" stroke="#e0a800" stroke-width="1"/>
                                            
                                            <!-- Cab Wheels Area -->
                                            <ellipse cx="30" cy="155" rx="25" ry="8" fill="#495057" opacity="0.3"/>
                                            <ellipse cx="90" cy="155" rx="25" ry="8" fill="#495057" opacity="0.3"/>
                                        </g>
                                        
                                        <!-- Cab Wheels -->
                                        <circle cx="790" cy="275" r="25" fill="url(#wheelGradient)"/>
                                        <circle cx="790" cy="275" r="15" fill="#343a40"/>
                                        <circle cx="790" cy="268" r="4" fill="#6c757d"/>
                                        
                                        <circle cx="850" cy="275" r="25" fill="url(#wheelGradient)"/>
                                        <circle cx="850" cy="275" r="15" fill="#343a40"/>
                                        <circle cx="850" cy="268" r="4" fill="#6c757d"/>
                                        
                                        <!-- Wheels with improved design (Bigger) -->
                                        <circle cx="140" cy="275" r="25" fill="url(#wheelGradient)"/>
                                        <circle cx="140" cy="275" r="15" fill="#343a40"/>
                                        <circle cx="140" cy="268" r="4" fill="#6c757d"/>
                                        
                                        <circle cx="220" cy="275" r="25" fill="url(#wheelGradient)"/>
                                        <circle cx="220" cy="275" r="15" fill="#343a40"/>
                                        <circle cx="220" cy="268" r="4" fill="#6c757d"/>
                                        
                                        <circle cx="580" cy="275" r="25" fill="url(#wheelGradient)"/>
                                        <circle cx="580" cy="275" r="15" fill="#343a40"/>
                                        <circle cx="580" cy="268" r="4" fill="#6c757d"/>
                                        
                                        <circle cx="660" cy="275" r="25" fill="url(#wheelGradient)"/>
                                        <circle cx="660" cy="275" r="15" fill="#343a40"/>
                                        <circle cx="660" cy="268" r="4" fill="#6c757d"/>
                                        
                                        <!-- Cab wheels likely present in image; keep trailer wheels only -->
                                        
                                        <!-- Exhaust pipe (Bigger) -->
                                        <rect x="760" y="190" width="8" height="35" rx="4" fill="#495057"/>
                                        <ellipse cx="764" cy="190" rx="4" ry="3" fill="#6c757d"/>
                                                </svg>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                </div>
                <div class="ldm-info-section">
                    <div class="row g-4">
                        <div class="col-lg-6">
                            <div class="info-card">
                                <h4>@LanguageService.GetLocalizedText("LDM Nedir?", "What is LDM?")</h4>
                                <p>@LanguageService.GetLocalizedText("LDM (Loading Meter / Yükleme Metre), bir gönderinin tır zemini üzerinde kapladığı uzunluğu ifade eder. Standart formül: LDM = (Uzunluk(m) × Genişlik(m)) / 2.4", "LDM (Loading Meter) represents how much length on the truck floor a shipment occupies. Standard formula: LDM = (Length(m) × Width(m)) / 2.4")</p>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <div class="info-card">
                                <h4>@LanguageService.GetLocalizedText("Nasıl Hesaplanır?", "How to Calculate?")</h4>
                                <p>@LanguageService.GetLocalizedText("1. Uzunluğu ve genişliği cm cinsinden girin\n2. cm değerlerini metreye çevirin (cm / 100)\n3. Uzunluk(m) × Genişlik(m) hesaplayın\n4. Sonucu 2.4'e bölün (standart tır iç genişliği)\n5. Çıkan sonuç LDM değeridir", "1. Enter length and width in cm\n2. Convert cm to meters (cm / 100)\n3. Calculate Length(m) × Width(m)\n4. Divide the result by 2.4 (standard truck inner width)\n5. The result is the LDM value")</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@section Scripts {
    <script>
        function recalcLDM() {
            const length = parseFloat(document.getElementById('length').value) || 0;
            const width = parseFloat(document.getElementById('width').value) || 0;
            const height = parseFloat(document.getElementById('height').value) || 0;
            const quantity = parseInt(document.getElementById('quantity').value) || 1;
            const stackable = document.getElementById('stackable').value;

            if (length <= 0 || width <= 0) {
                document.getElementById('ldmBigValue').textContent = '0.0';
                updateVisualization(0);
                // Only show error if user has entered values but they are invalid
                if (length > 0 && width <= 0) {
                    showToast('⚠️ Genişlik değeri 0\'dan büyük olmalıdır!', 'error');
                } else if (length <= 0 && width > 0) {
                    showToast('⚠️ Uzunluk değeri 0\'dan büyük olmalıdır!', 'error');
                }
                return;
            }

            const lengthM = length / 100;
            const widthM = width / 100;
            const heightM = height / 100;
            
            // Truck standard dimensions
            const truckWidth = 2.4; // meters
            const truckHeight = 2.7; // meters (standard internal height)
            
            // Basic LDM calculation
            let ldmPer = (lengthM * widthM) / truckWidth;
            let toastMessage = '';
            let toastType = 'success';
            
            // Height consideration: if height exceeds truck height, needs extra space
            let heightLayers = 1;
            if (heightM > 0) {
                heightLayers = Math.ceil(heightM / truckHeight);
                if (heightLayers > 1) {
                    ldmPer = ldmPer * heightLayers;
                    toastMessage += `📏 Yükseklik ${heightM.toFixed(1)}m olduğu için ${heightLayers} katman gerekiyor. `;
                }
            }
            
            // Stackable logic
            let totalLdm;
            if (stackable === 'yes') {
                // If stackable, calculate how many can fit in truck height
                if (heightM > 0) {
                    const stacksPerHeight = Math.floor(truckHeight / heightM);
                    const totalStacks = Math.ceil(quantity / stacksPerHeight);
                    totalLdm = ldmPer * totalStacks;
                    
                    if (stacksPerHeight >= quantity) {
                        toastMessage += `📦 ${quantity} adet paket üst üste yüklenebilir (${stacksPerHeight} adete kadar sığar). Tek paket alanı kullanıldı.`;
                    } else {
                        toastMessage += `📦 Paketler üst üste yüklenebilir ancak ${stacksPerHeight} adet sığdığı için ${totalStacks} grup halinde yerleştirildi.`;
                    }
                } else {
                    totalLdm = ldmPer;
                    toastMessage += `📦 Paketler üst üste yüklenebilir. Tek paket alanı kullanıldı.`;
                }
            } else {
                // If not stackable, each package needs separate space
                totalLdm = ldmPer * quantity;
                toastMessage += `📋 Paketler üst üste yüklenemez. Her paket için ayrı alan hesaplandı (${quantity} × ${ldmPer.toFixed(2)} LDM).`;
            }
            
            // Only show toast for warnings/errors
            if (totalLdm > 13.6) {
                toastType = 'error';
                toastMessage = `⚠️ UYARI: ${totalLdm.toFixed(1)} LDM tır kapasitesini (13.6 LDM) aşıyor! Ek tır gerekli.`;
                showToast(toastMessage, toastType);
            } else if (totalLdm > 10.9) {
                toastType = 'warning';
                toastMessage = `⚡ Dikkat! Kapasite %80'i aştı (${totalLdm.toFixed(1)}/13.6 LDM). Dikkatli yükleme gerekir.`;
                showToast(toastMessage, toastType);
            }

            document.getElementById('ldmBigValue').textContent = totalLdm.toFixed(1);
            updateVisualization(totalLdm);
        }
        
        function showToast(message, type = 'success') {
            const colors = {
                success: '#28a745',
                warning: '#ffc107', 
                error: '#dc3545',
                info: '#17a2b8'
            };
            
            Toastify({
                text: message,
                duration: 6000,
                close: true,
                gravity: "top",
                position: "right",
                backgroundColor: colors[type] || colors.info,
                style: {
                    background: colors[type] || colors.info,
                    borderRadius: '12px',
                    fontSize: '14px',
                    boxShadow: '0 10px 25px rgba(0,0,0,0.2)',
                    padding: '16px 20px',
                    maxWidth: '400px'
                },
                onClick: function(){} 
            }).showToast();
        }

        let toastTimeout;
        
        ['length','width','quantity','stackable','height'].forEach(function(id) {
            const el = document.getElementById(id);
            if (!el) return;
            const evt = (el.tagName === 'SELECT') ? 'change' : 'input';
            el.addEventListener(evt, function() {
                // Clear previous timeout
                if (toastTimeout) {
                    clearTimeout(toastTimeout);
                }
                
                // Set new timeout to show toast after user stops typing/changing values
                toastTimeout = setTimeout(function() {
                    recalcLDM();
                }, 1500); // Show toast 1.5 seconds after user stops interaction
                
                // Immediate silent calculation for live updates
                recalcLDMSilent();
            });
        });
        
        // Silent calculation function (no toast messages)
        function recalcLDMSilent() {
            const length = parseFloat(document.getElementById('length').value) || 0;
            const width = parseFloat(document.getElementById('width').value) || 0;
            const height = parseFloat(document.getElementById('height').value) || 0;
            const quantity = parseInt(document.getElementById('quantity').value) || 1;
            const stackable = document.getElementById('stackable').value;

            if (length <= 0 || width <= 0) {
                document.getElementById('ldmBigValue').textContent = '0.0';
                updateVisualization(0);
                return;
            }

            const lengthM = length / 100;
            const widthM = width / 100;
            const heightM = height / 100;
            
            const truckWidth = 2.4;
            const truckHeight = 2.7;
            
            let ldmPer = (lengthM * widthM) / truckWidth;
            
            let heightLayers = 1;
            if (heightM > 0) {
                heightLayers = Math.ceil(heightM / truckHeight);
                if (heightLayers > 1) {
                    ldmPer = ldmPer * heightLayers;
                }
            }
            
            let totalLdm;
            if (stackable === 'yes') {
                if (heightM > 0) {
                    const stacksPerHeight = Math.floor(truckHeight / heightM);
                    const totalStacks = Math.ceil(quantity / stacksPerHeight);
                    totalLdm = ldmPer * totalStacks;
                } else {
                    totalLdm = ldmPer;
                }
            } else {
                totalLdm = ldmPer * quantity;
            }

            document.getElementById('ldmBigValue').textContent = totalLdm.toFixed(1);
            updateVisualization(totalLdm);
        }

        // Initial calculate (silent, no toast)
        recalcLDMSilent();

        function updateVisualization(ldmValue) {
            const maxCapacity = 13.6;
            const percent = Math.max(0, Math.min(100, (ldmValue / maxCapacity) * 100));
            const fill = document.getElementById('cargoFill');
            const capText = document.getElementById('ldmCapacityText');
            const pctText = document.getElementById('ldmPercentText');

            if (!fill) return;

            // Trailer inner drawable width in SVG (approx): 690 - padding 15 = 675
            const maxWidth = 675;
            const widthPx = (percent / 100) * maxWidth;
            fill.setAttribute('width', widthPx);

            fill.classList.remove('near-limit', 'over-limit');
            if (ldmValue > maxCapacity) {
                fill.classList.add('over-limit');
            } else if (percent > 80) {
                fill.classList.add('near-limit');
            }

            if (capText) capText.textContent = ldmValue.toFixed(1) + ' / ' + maxCapacity + ' LDM';
            if (pctText) pctText.textContent = percent.toFixed(0) + '%';
        }
    </script>
}