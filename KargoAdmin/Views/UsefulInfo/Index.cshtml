@model IEnumerable<Blog>
@using System.Text.RegularExpressions
@using KargoAdmin.Services
@using KargoAdmin.Helpers
@inject ILanguageService LanguageService
@{
    ViewData["Title"] = LanguageService.GetCurrentLanguage() == "en" ? "Useful Information" : "Faydalı Bilgiler";
    Layout = "_PublicLayout";
}

<!-- Blog Header Section -->
<section class="blog-header-section">
    <div class="container blog-header-container">
        <!-- Blog Başlık -->
        <h1 class="blog-main-title">@(LanguageService.GetCurrentLanguage() == "en" ? "Useful Information" : "Faydalı Bilgiler")</h1>
        <p class="blog-subtitle">
            @(LanguageService.GetCurrentLanguage() == "en"
                ? "Practical tips, insights and expert recommendations to make your logistics and cargo operations easier"
                : "Lojistik ve kargo dünyasında işinizi kolaylaştıracak pratik bilgiler, ipuçları ve uzman önerileriyle donatılmış faydalı içerikler")
        </p>

        <!-- Kategori Tabları - Scroll İpuçları ile -->
        <div class="blog-category-wrapper">
            <div class="blog-category-tabs" id="categoryTabs">
                <!-- Global Tab -->
                <a href="@Url.Action("Index", "UsefulInfo")"
                   class="category-tab @(ViewBag.CurrentTag == null ? "active" : "")">
                    @(LanguageService.GetCurrentLanguage() == "en" ? "All" : "Tümü")
                </a>

                <!-- Dinamik Tag'ler -->
                @if (ViewBag.AvailableTags != null)
                {
                    @foreach (var tag in ViewBag.AvailableTags)
                    {
                        var tagObj = (dynamic)tag;
                        <a href="@Url.Action("Tag", "UsefulInfo", new { tag = tagObj.Name })"
                           class="category-tab @(ViewBag.CurrentTag?.ToString() == tagObj.Name?.ToString() ? "active" : "")">
                            @tagObj.Name
                        </a>
                    }
                }
            </div>

            <!-- Scroll İpucu -->
            <div class="scroll-hint" id="scrollHint">
                <i class="fas fa-hand-point-left"></i>
                @(LanguageService.GetCurrentLanguage() == "en" ? "Drag to scroll or use mouse wheel" : "Kaydırmak için sürükleyin veya mouse tekerleğini kullanın")
                <i class="fas fa-hand-point-right"></i>
            </div>
        </div>
    </div>

    <!-- Blog Header Section içine ekleyin -->
    <div class="blog-header-search">
        <form action="@Url.Action("Search", "UsefulInfo")" method="get" class="compact-search-form">
            <div class="search-wrapper">
                <input type="text" name="query" value="@ViewBag.SearchQuery"
                       placeholder="Faydalı bilgi ara..." class="compact-search-input">
                <button type="submit" class="compact-search-btn">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
    </div>
</section>

<!-- Blog Content Section -->
<section class="blog-content-section">
    <div class="container">
        <div class="row">
            <!-- Blog Posts -->
            <div class="col-lg-12">
                <!-- Filter Alerts -->
                @if (ViewBag.CurrentTag != null)
                {
                        <div class="blog-alert alert-primary">
                        <div>
                                <i class="fas fa-tag me-2"></i>
                                <strong>@(LanguageService.GetCurrentLanguage() == "en" ? "Category:" : "Kategori:")</strong> @ViewBag.CurrentTag
                        </div>
                        <a href="@Url.Action("Index", "UsefulInfo")" class="close-filter">
                            <i class="fas fa-times"></i>
                        </a>
                    </div>
                }

                @if (ViewBag.SearchQuery != null)
                {
                        <div class="blog-alert alert-info">
                        <div>
                                <i class="fas fa-search me-2"></i>
                                <strong>@(LanguageService.GetCurrentLanguage() == "en" ? "Search:" : "Arama:")</strong> "@ViewBag.SearchQuery"
                                <span class="ms-2 text-muted">(@Model.Count() @(LanguageService.GetCurrentLanguage() == "en" ? "results" : "sonuç"))</span>
                        </div>
                        <a href="@Url.Action("Index", "UsefulInfo")" class="close-filter">
                            <i class="fas fa-times"></i>
                        </a>
                    </div>
                }

                <!-- Modern Blog Cards Grid -->
                @if (!Model.Any())
                {
                    <div class="blog-empty-state">
                        <div class="empty-icon">
                            <i class="fas fa-lightbulb"></i>
                        </div>
                        <h3>@(LanguageService.GetCurrentLanguage() == "en" ? "No Content Found" : "Henüz Faydalı Bilgi Bulunmuyor")</h3>
                        <p>@(LanguageService.GetCurrentLanguage() == "en" ? "No useful information found in this category yet." : "Bu kategoride henüz faydalı bilgi bulunmamaktadır.")</p>
                        <a href="@Url.Action("Index", "UsefulInfo")" class="btn-primary-outline">
                            @(LanguageService.GetCurrentLanguage() == "en" ? "Back to All" : "Tüm Faydalı Bilgilere Dön")
                        </a>
                    </div>
                }
                else
                {
                    <div class="modern-blog-grid">
                        @foreach (var info in Model)
                        {
                            <article class="modern-blog-card">
                                <!-- Card Header with Image -->
                                <div class="card-header-section">
                                    <!-- Featured Image -->
                                    <div class="blog-image-container">
                                        @if (!string.IsNullOrEmpty(info.ImageUrl))
                                        {
                                            @if (info.ImageUrl.StartsWith("/uploads/") || info.ImageUrl.StartsWith("http"))
                                            {
                                                <img src="@info.ImageUrl" alt="@info.GetLocalizedTitle(LanguageService)" class="blog-featured-image" loading="lazy">
                                            }
                                            else
                                            {
                                                <img src="/uploads/@info.ImageUrl" alt="@info.GetLocalizedTitle(LanguageService)" class="blog-featured-image" loading="lazy">
                                            }
                                        }
                                        else
                                        {
                                            <img src="/img/blog-placeholder.png" alt="@info.GetLocalizedTitle(LanguageService)" class="blog-featured-image">
                                        }

                                        <!-- Image Overlay -->
                                        <div class="image-hover-overlay">
                                            <a href="@Url.Action("Details", "UsefulInfo", new { id = info.Id, slug = info.Slug })"
                                               class="image-read-btn">
                                                <i class="fas fa-arrow-right"></i>
                                            </a>
                                        </div>

                                        <!-- Category Badge -->
                                        <span class="category-badge-modern">
                                            <i class="fas fa-lightbulb me-1"></i>@(LanguageService.GetCurrentLanguage() == "en" ? "Useful Info" : "Faydalı Bilgi")
                                        </span>

                                        <!-- Date Badge -->
                                        <div class="date-badge">
                                            <span class="date-day">@info.PublishDate.ToString("dd")</span>
                                            <span class="date-month">@info.PublishDate.ToString("MMM", new System.Globalization.CultureInfo("tr-TR")).ToUpper()</span>
                                        </div>
                                    </div>
                                </div>

                                <!-- Card Content -->
                                <div class="card-content-section">
                                    <!-- Meta Information -->
                                    <div class="blog-meta-modern">
                                        <div class="meta-group">
                                            <span class="meta-item">
                                                <i class="far fa-eye"></i>
                                                @info.ViewCount @(LanguageService.GetCurrentLanguage() == "en" ? "views" : "görüntülenme")
                                            </span>
                                            <span class="meta-divider">•</span>
                                            <span class="meta-item">
                                                @{
                                                    var contentLength = (info.Content ?? string.Empty).Length;
                                                    var contentLengthEn = (info.ContentEn ?? string.Empty).Length;
                                                    var lengthToUse = LanguageService.GetCurrentLanguage() == "en" && contentLengthEn > 0 ? contentLengthEn : contentLength;
                                                    var readingTime = (lengthToUse / 200) + 1;
                                                }
                                                <i class="far fa-clock"></i>
                                                @readingTime dk okuma
                                            </span>
                                        </div>
                                    </div>

                                    <!-- Blog Title -->
                                    <h2 class="blog-title-modern">
                                        <a href="@Url.Action("Details", "UsefulInfo", new { id = info.Id, slug = (LanguageService.GetCurrentLanguage() == "en" && !string.IsNullOrEmpty(info.SlugEn)) ? info.SlugEn : info.Slug })">
                                            @info.GetLocalizedTitle(LanguageService)
                                        </a>
                                    </h2>

                                    <!-- Blog Excerpt -->
                                    @{
                                        var localizedContent = LanguageService.GetCurrentLanguage() == "en" && !string.IsNullOrEmpty(info.ContentEn) ? info.ContentEn : info.Content;
                                        var plainText = Regex.Replace(localizedContent ?? "", "<.*?>", "");
                                        var excerpt = plainText.Length > 140 ? plainText.Substring(0, 140) + "..." : plainText;
                                    }
                                    <p class="blog-excerpt-modern">@excerpt</p>

                                    <!-- Author & Tags Row -->
                                    <div class="author-tags-section">
                                        <!-- Author Info -->
                                        @if (info.Author != null && !string.IsNullOrEmpty(info.Author.FirstName))
                                        {
                                            <div class="author-info-mini">
                                                <div class="author-avatar">
                                                    <img src="/img/author-placeholder.jpg" alt="@info.Author.FirstName @info.Author.LastName">
                                                </div>
                                                <span class="author-name">@info.Author.FirstName @(info.Author.LastName ?? "")</span>
                                            </div>
                                        }

                                        <!-- Tags Preview -->
                                        @{
                                            var localizedTags = info.GetLocalizedTags(LanguageService);
                                        }
                                        @if (!string.IsNullOrEmpty(localizedTags))
                                        {
                                            <div class="tags-preview">
                                                @foreach (var tag in localizedTags.Split(',', StringSplitOptions.RemoveEmptyEntries).Take(2))
                                                {
                                                    <a href="@Url.Action("Tag", "UsefulInfo", new { tag = tag.Trim() })"
                                                       class="tag-mini">
                                                        #@tag.Trim()
                                                    </a>
                                                }
                                                @if (localizedTags.Split(',', StringSplitOptions.RemoveEmptyEntries).Length > 2)
                                                {
                                                    <span class="tag-more">+@(localizedTags.Split(',', StringSplitOptions.RemoveEmptyEntries).Length - 2)</span>
                                                }
                                            </div>
                                        }
                                    </div>

                                    <!-- Action Footer -->
                                    <div class="card-action-footer">
                                        <a href="@Url.Action("Details", "UsefulInfo", new { id = info.Id, slug = (LanguageService.GetCurrentLanguage() == "en" && !string.IsNullOrEmpty(info.SlugEn)) ? info.SlugEn : info.Slug })"
                                           class="read-more-modern">
                                            <span>@(LanguageService.GetCurrentLanguage() == "en" ? "Read More" : "Detayını Gör")</span>
                                            <i class="fas fa-chevron-right"></i>
                                        </a>

                                        <!-- Share Action -->
                                        <div class="share-action">
                                            <button class="share-btn" title="@(LanguageService.GetCurrentLanguage() == "en" ? "Share" : "Paylaş")">
                                                <i class="fas fa-share-alt"></i>
                                                <span>@(LanguageService.GetCurrentLanguage() == "en" ? "Share" : "Paylaş")</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <!-- Hover Effect Overlay -->
                                <div class="card-hover-effect"></div>
                            </article>
                        }
                    </div>

                    <!-- Pagination -->
                    @if (ViewBag.TotalPages > 1)
                    {
                        <nav aria-label="Faydalı bilgiler pagination" class="modern-pagination-wrapper">
                            <ul class="modern-pagination">
                                @if (ViewBag.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        @if (ViewBag.CurrentTag != null)
                                        {
                                            <a class="page-link prev-link" href="@Url.Action("Tag", "UsefulInfo", new { tag = ViewBag.CurrentTag, page = ViewBag.CurrentPage - 1 })" aria-label="Önceki">
                                                <i class="fas fa-chevron-left"></i>
                                                <span>Önceki</span>
                                            </a>
                                        }
                                        else if (ViewBag.SearchQuery != null)
                                        {
                                            <a class="page-link prev-link" href="@Url.Action("Search", "UsefulInfo", new { query = ViewBag.SearchQuery, page = ViewBag.CurrentPage - 1 })" aria-label="Önceki">
                                                <i class="fas fa-chevron-left"></i>
                                                <span>Önceki</span>
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="page-link prev-link" href="@Url.Action("Index", "UsefulInfo", new { page = ViewBag.CurrentPage - 1 })" aria-label="Önceki">
                                                <i class="fas fa-chevron-left"></i>
                                                <span>Önceki</span>
                                            </a>
                                        }
                                    </li>
                                }

                                @{
                                    int startPage = Math.Max(1, ViewBag.CurrentPage - 2);
                                    int endPage = Math.Min((int)ViewBag.TotalPages, ViewBag.CurrentPage + 2);
                                }

                                @for (int i = startPage; i <= endPage; i++)
                                {
                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                        @if (ViewBag.CurrentTag != null)
                                        {
                                            <a class="page-link" href="@Url.Action("Tag", "UsefulInfo", new { tag = ViewBag.CurrentTag, page = i })">@i</a>
                                        }
                                        else if (ViewBag.SearchQuery != null)
                                        {
                                            <a class="page-link" href="@Url.Action("Search", "UsefulInfo", new { query = ViewBag.SearchQuery, page = i })">@i</a>
                                        }
                                        else
                                        {
                                            <a class="page-link" href="@Url.Action("Index", "UsefulInfo", new { page = i })">@i</a>
                                        }
                                    </li>
                                }

                                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                {
                                    <li class="page-item">
                                        @if (ViewBag.CurrentTag != null)
                                        {
                                            <a class="page-link next-link" href="@Url.Action("Tag", "UsefulInfo", new { tag = ViewBag.CurrentTag, page = ViewBag.CurrentPage + 1 })" aria-label="Sonraki">
                                                <span>Sonraki</span>
                                                <i class="fas fa-chevron-right"></i>
                                            </a>
                                        }
                                        else if (ViewBag.SearchQuery != null)
                                        {
                                            <a class="page-link next-link" href="@Url.Action("Search", "UsefulInfo", new { query = ViewBag.SearchQuery, page = ViewBag.CurrentPage + 1 })" aria-label="Sonraki">
                                                <span>Sonraki</span>
                                                <i class="fas fa-chevron-right"></i>
                                            </a>
                                        }
                                        else
                                        {
                                            <a class="page-link next-link" href="@Url.Action("Index", "UsefulInfo", new { page = ViewBag.CurrentPage + 1 })" aria-label="Sonraki">
                                                <span>Sonraki</span>
                                                <i class="fas fa-chevron-right"></i>
                                            </a>
                                        }
                                    </li>
                                }
                            </ul>
                        </nav>
                    }
                }
            </div>
        </div>
    </div>
</section>

@section Styles {
    <link href="~/css/blog-header-modern.css" rel="stylesheet" />
    <link href="~/css/blog-cards.css" rel="stylesheet" />
}

<script src="~/js/blog-cards.js" asp-append-version="true"></script>
<script>
    // Kategori Scroll - Kullanıcı İpuçları ile
    document.addEventListener('DOMContentLoaded', function() {
        const categoryTabs = document.getElementById('categoryTabs');
        const scrollHint = document.getElementById('scrollHint');

        if (categoryTabs) {
            // Scroll olabilir mi kontrol et
            function checkScrollable() {
                const isScrollable = categoryTabs.scrollWidth > categoryTabs.clientWidth;

                if (isScrollable) {
                    categoryTabs.classList.add('has-more');
                    if (scrollHint) {
                        scrollHint.classList.add('show');
                        // 5 saniye sonra ipucunu gizle
                        setTimeout(() => {
                            scrollHint.classList.remove('show');
                        }, 5000);
                    }
                } else {
                    categoryTabs.classList.remove('has-more');
                    if (scrollHint) {
                        scrollHint.classList.remove('show');
                    }
                }
            }

            // İlk kontrol
            setTimeout(checkScrollable, 100);

            // Pencere boyutu değiştiğinde kontrol et
            window.addEventListener('resize', checkScrollable);

            // Aktif tab'e scroll - Sayfa yüklendiğinde
            const activeTab = categoryTabs.querySelector('.category-tab.active');
            if (activeTab) {
                setTimeout(() => {
                    activeTab.scrollIntoView({
                        behavior: 'smooth',
                        block: 'nearest',
                        inline: 'center'
                    });
                }, 200);
            }

            // Mouse wheel ile yatay scroll
            categoryTabs.addEventListener('wheel', function(e) {
                if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {
                    e.preventDefault();
                    this.scrollLeft += e.deltaY;

                    // İpucu kullanıldıktan sonra gizle
                    if (scrollHint) {
                        scrollHint.classList.remove('show');
                    }
                }
            }, { passive: false });

            // Touch scroll - Mobil
            let touchStartX = 0;
            let scrollStartX = 0;
            let hasTouched = false;

            categoryTabs.addEventListener('touchstart', function(e) {
                touchStartX = e.touches[0].clientX;
                scrollStartX = this.scrollLeft;
                hasTouched = true;
            });

            categoryTabs.addEventListener('touchmove', function(e) {
                if (e.touches.length === 1) {
                    const touchX = e.touches[0].clientX;
                    const diff = touchStartX - touchX;
                    this.scrollLeft = scrollStartX + diff;

                    // İpucu kullanıldıktan sonra gizle
                    if (hasTouched && scrollHint) {
                        scrollHint.classList.remove('show');
                    }
                }
            });

            // Mouse enter/leave ile ipucu göster
            categoryTabs.addEventListener('mouseenter', function() {
                const isScrollable = this.scrollWidth > this.clientWidth;
                if (isScrollable && scrollHint && !scrollHint.classList.contains('used')) {
                    scrollHint.classList.add('show');
                }
            });

            categoryTabs.addEventListener('mouseleave', function() {
                if (scrollHint) {
                    scrollHint.classList.remove('show');
                }
            });

            // Scroll kullanıldığında ipucunu kalıcı gizle
            categoryTabs.addEventListener('scroll', function() {
                if (scrollHint) {
                    scrollHint.classList.add('used');
                    scrollHint.classList.remove('show');
                }
            });
        }
    });

    // Header Search Enhanced Functionality
    document.addEventListener('DOMContentLoaded', function() {
        const searchForm = document.querySelector('.compact-search-form');
        const searchBtn = document.querySelector('.compact-search-btn');
        const searchInput = document.querySelector('.compact-search-input');

        if (searchForm && searchBtn && searchInput) {
            // Loading animation
            searchForm.addEventListener('submit', function() {
                searchBtn.classList.add('loading');
                searchForm.classList.add('searching');
            });

            // Input focus effects
            searchInput.addEventListener('focus', function() {
                searchForm.classList.add('focused');
            });

            searchInput.addEventListener('blur', function() {
                searchForm.classList.remove('focused');
            });

            // Enter key handling
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    searchForm.submit();
                }
            });
        }
    });
</script>