@model IEnumerable<Blog>
@using System.Text.RegularExpressions
@using KargoAdmin.Services
@using KargoAdmin.Helpers
@inject ILanguageService LanguageService
@{
    ViewData["Title"] = LanguageService.GetCurrentLanguage() == "en" ? "Blog/News" : "Blog/Haber";
    Layout = "_PublicLayout";
}

<!-- Blog Header Section -->
<section class="blog-header-section">
    <div class="container blog-header-container">
        <!-- Blog Başlık -->
        <h1 class="blog-main-title">@(LanguageService.GetCurrentLanguage() == "en" ? "Blog/News" : "Blog/Haber")</h1>
        <p class="blog-subtitle">
            @(LanguageService.GetCurrentLanguage() == "en" 
                ? "Stay ahead with the latest trends in logistics, industry analysis and expert insights that will advance your business" 
                : "Lojistik dünyasındaki en güncel trendler, sektörel analizler ve uzman görüşleriyle işinizi ileriye taşıyacak içerikler burada")
        </p>

        <!-- Kategori Tabları - Scroll İpuçları ile -->
        <div class="blog-category-wrapper">
            <div class="blog-category-tabs" id="categoryTabs">
                <!-- Global Tab -->
                <a href="@Url.Action("Index", "PublicBlog")"
                   class="category-tab @(ViewBag.CurrentTag == null ? "active" : "")">
                    @(LanguageService.GetCurrentLanguage() == "en" ? "Global" : "Global")
                </a>

                <!-- Dinamik Tag'ler -->
                @if (ViewBag.AvailableTags != null)
                {
                    @foreach (var tag in ViewBag.AvailableTags)
                    {
                        var tagObj = (dynamic)tag;
                        <a href="@Url.Action("Tag", "PublicBlog", new { tag = tagObj.Name })"
                           class="category-tab @(ViewBag.CurrentTag?.ToString() == tagObj.Name?.ToString() ? "active" : "")">
                            @tagObj.Name
                        </a>
                    }
                }
            </div>

            <!-- Scroll İpucu -->
            <div class="scroll-hint" id="scrollHint">
                <i class="fas fa-hand-point-left"></i>
                Kaydırmak için sürükleyin veya mouse tekerleğini kullanın
                <i class="fas fa-hand-point-right"></i>
            </div>
        </div>
    </div>
    <!-- Blog Header Section içine ekleyin -->
    <div class="blog-header-search">
        <form action="@Url.Action("Search", "PublicBlog")" method="get" class="compact-search-form">
            <div class="search-wrapper">
                            <input type="text" name="query" value="@ViewBag.SearchQuery"
                   placeholder="@(LanguageService.GetCurrentLanguage() == "en" ? "Search blog..." : "Blog ara...")" class="compact-search-input">
                <button type="submit" class="compact-search-btn">
                    <i class="fas fa-search"></i>
                </button>
            </div>
        </form>
    </div>
</section>

<!-- Blog Content Section -->
<section class="blog-content-section">
    <div class="container">
        <div class="row">
            <!-- Blog Posts -->
            <div class="col-lg-12">
                <!-- Filter Alerts -->
                @if (ViewBag.CurrentTag != null)
                {
                    <div class="blog-alert alert-primary">
                        <div>
                            <i class="fas fa-tag me-2"></i>
                            <strong>Kategori:</strong> @ViewBag.CurrentTag
                        </div>
                        <a href="@Url.Action("Index", "PublicBlog")" class="close-filter">
                            <i class="fas fa-times"></i>
                        </a>
                    </div>
                }

                @if (ViewBag.SearchQuery != null)
                {
                    <div class="blog-alert alert-info">
                        <div>
                            <i class="fas fa-search me-2"></i>
                            <strong>Arama:</strong> "@ViewBag.SearchQuery"
                            <span class="ms-2 text-muted">(@Model.Count() sonuç)</span>
                        </div>
                        <a href="@Url.Action("Index", "PublicBlog")" class="close-filter">
                            <i class="fas fa-times"></i>
                        </a>
                    </div>
                }

                <!-- Modern Blog Cards Grid - Index.cshtml için güncel bölüm -->
                @if (!Model.Any())
                {
                    <div class="blog-empty-state">
                        <div class="empty-icon">
                            <i class="fas fa-newspaper"></i>
                        </div>
                        <h3>@(LanguageService.GetCurrentLanguage() == "en" ? "No Content Found" : "Henüz İçerik Bulunmuyor")</h3>
                        <p>@(LanguageService.GetCurrentLanguage() == "en" ? "No blog posts found in this category yet." : "Bu kategoride henüz blog yazısı bulunmamaktadır.")</p>
                        <a href="@Url.Action("Index", "PublicBlog")" class="btn-primary-outline">
                            @(LanguageService.GetCurrentLanguage() == "en" ? "Back to All Posts" : "Tüm Yazılara Dön")
                        </a>
                    </div>
                }
                else
                {
                    <div class="modern-blog-grid">
                        @foreach (var blog in Model)
                        {
                            <article class="modern-blog-card">
                                <!-- Card Header with Image -->
                                <div class="card-header-section">
                                    <!-- Featured Image -->
                                    <div class="blog-image-container">
                                        <img src="@(!string.IsNullOrEmpty(blog.ImageUrl) ? "/uploads/" + blog.ImageUrl : "/img/blog-placeholder.png")"
                                             alt="@blog.Title"
                                             class="blog-featured-image">

                                        <!-- Image Overlay -->
                                        <div class="image-hover-overlay">
                                            <a href="@Url.Action("Details", "PublicBlog", new { id = blog.Id, slug = blog.Slug })"
                                               class="image-read-btn">
                                                <i class="fas fa-arrow-right"></i>
                                            </a>
                                        </div>

                                        <!-- Category Badge -->
                                        @if (!string.IsNullOrEmpty(blog.GetLocalizedTags(LanguageService)))
                                        {
                                            <span class="category-badge-modern">
                                                @blog.GetLocalizedTags(LanguageService).Split(',').FirstOrDefault()?.Trim()
                                            </span>
                                        }

                                        <!-- Date Badge -->
                                        <div class="date-badge">
                                            <span class="date-day">@blog.PublishDate.ToString("dd")</span>
                                            <span class="date-month">@blog.PublishDate.ToString("MMM").ToUpper()</span>
                                        </div>
                                    </div>
                                </div>

                                <!-- Card Content -->
                                <div class="card-content-section">
                                    <!-- Meta Information -->
                                    <div class="blog-meta-modern">
                                        <div class="meta-group">
                                            <span class="meta-item">
                                                <i class="far fa-eye"></i>
                                                @blog.ViewCount @(LanguageService.GetCurrentLanguage() == "en" ? "views" : "görüntülenme")
                                            </span>
                                            <span class="meta-divider">•</span>
                                            <span class="meta-item">
                                                @{
                                                    var contentLength = blog.GetLocalizedContent(LanguageService).Length;
                                                    var readingTime = (contentLength / 200) + 1;
                                                }
                                                <i class="far fa-clock"></i>
                                                @readingTime @(LanguageService.GetCurrentLanguage() == "en" ? "min read" : "dk okuma")
                                            </span>
                                        </div>
                                    </div>

                                    <!-- Blog Title -->
                                    <h2 class="blog-title-modern">
                                        <a href="@Url.Action("Details", "PublicBlog", new { id = blog.Id, slug = blog.GetLocalizedSlug(LanguageService) })">
                                            @blog.GetLocalizedTitle(LanguageService)
                                        </a>
                                    </h2>

                                    <!-- Blog Excerpt -->
                                    @{
                                        var localizedContent = blog.GetLocalizedContent(LanguageService);
                                        var plainText = Regex.Replace(localizedContent, "<.*?>", "");
                                        var excerpt = plainText.Length > 140 ? plainText.Substring(0, 140) + "..." : plainText;
                                    }
                                    <p class="blog-excerpt-modern">@excerpt</p>

                                    <!-- Author & Tags Row -->
                                    <div class="author-tags-section">
                                        <!-- Author Info -->
                                        <div class="author-info-mini">
                                            <div class="author-avatar">
                                                <img src="/img/author-placeholder.jpg" alt="@blog.Author.FirstName @blog.Author.LastName">
                                            </div>
                                            <span class="author-name">@blog.Author.FirstName @blog.Author.LastName</span>
                                        </div>

                                        <!-- Tags Preview -->
                                        @if (!string.IsNullOrEmpty(blog.Tags))
                                        {
                                            <div class="tags-preview">
                                                @foreach (var tag in blog.Tags.Split(',').Take(2))
                                                {
                                                    <a href="@Url.Action("Tag", "PublicBlog", new { tag = tag.Trim() })"
                                                       class="tag-mini">
                                                        #@tag.Trim()
                                                    </a>
                                                }
                                                @if (blog.Tags.Split(',').Length > 2)
                                                {
                                                    <span class="tag-more">+@(blog.Tags.Split(',').Length - 2)</span>
                                                }
                                            </div>
                                        }
                                    </div>

                                    <!-- Action Footer -->
                                    <div class="card-action-footer">
                                        <a href="@Url.Action("Details", "PublicBlog", new { id = blog.Id, slug = blog.Slug })"
                                           class="read-more-modern">
                                            <span>Detayını Gör</span>
                                            <i class="fas fa-chevron-right"></i>
                                        </a>

                                        <!-- Share Action -->
                                        <div class="share-action">
                                            <button class="share-btn" title="Paylaş">
                                                <i class="fas fa-share-alt"></i>
                                                <span>Paylaş</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <!-- Hover Effect Overlay -->
                                <div class="card-hover-effect"></div>
                            </article>
                        }
                    </div>

                    <!-- Pagination -->
                    @if (ViewBag.TotalPages > 1)
                    {
                        <nav aria-label="Blog pagination" class="modern-pagination-wrapper">
                            <ul class="modern-pagination">
                                @if (ViewBag.CurrentPage > 1)
                                {
                                    <li class="page-item">
                                        <a class="page-link prev-link" href="@Url.Action("Index", "PublicBlog", new { page = ViewBag.CurrentPage - 1 })" aria-label="Önceki">
                                            <i class="fas fa-chevron-left"></i>
                                            <span>Önceki</span>
                                        </a>
                                    </li>
                                }

                                @for (int i = Math.Max(1, ViewBag.CurrentPage - 2); i <= Math.Min((int)ViewBag.TotalPages, ViewBag.CurrentPage + 2); i++)
                                {
                                    <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                                        <a class="page-link" href="@Url.Action("Index", "PublicBlog", new { page = i })">@i</a>
                                    </li>
                                }

                                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                {
                                    <li class="page-item">
                                        <a class="page-link next-link" href="@Url.Action("Index", "PublicBlog", new { page = ViewBag.CurrentPage + 1 })" aria-label="Sonraki">
                                            <span>Sonraki</span>
                                            <i class="fas fa-chevron-right"></i>
                                        </a>
                                    </li>
                                }
                            </ul>
                        </nav>
                    }
                }
            </div>
        </div>
    </div>
</section>

@section Styles {
    <link href="~/css/blog-header-modern.css" rel="stylesheet" />
    <link href="~/css/blog-cards.css" rel="stylesheet" />
}
<script src="~/js/blog-cards.js" asp-append-version="true"></script>
<script>
    // Kategori Scroll - Kullanıcı İpuçları ile
    document.addEventListener('DOMContentLoaded', function() {
        const categoryTabs = document.getElementById('categoryTabs');
        const scrollHint = document.getElementById('scrollHint');

        if (categoryTabs) {
            // Scroll olabilir mi kontrol et
            function checkScrollable() {
                const isScrollable = categoryTabs.scrollWidth > categoryTabs.clientWidth;

                if (isScrollable) {
                    categoryTabs.classList.add('has-more');
                    if (scrollHint) {
                        scrollHint.classList.add('show');
                        // 5 saniye sonra ipucunu gizle
                        setTimeout(() => {
                            scrollHint.classList.remove('show');
                        }, 5000);
                    }
                } else {
                    categoryTabs.classList.remove('has-more');
                    if (scrollHint) {
                        scrollHint.classList.remove('show');
                    }
                }
            }

            // İlk kontrol
            setTimeout(checkScrollable, 100);

            // Pencere boyutu değiştiğinde kontrol et
            window.addEventListener('resize', checkScrollable);

            // Aktif tab'e scroll - Sayfa yüklendiğinde
            const activeTab = categoryTabs.querySelector('.category-tab.active');
            if (activeTab) {
                setTimeout(() => {
                    activeTab.scrollIntoView({
                        behavior: 'smooth',
                        block: 'nearest',
                        inline: 'center'
                    });
                }, 200);
            }

            // Mouse wheel ile yatay scroll
            categoryTabs.addEventListener('wheel', function(e) {
                if (Math.abs(e.deltaY) > Math.abs(e.deltaX)) {
                    e.preventDefault();
                    this.scrollLeft += e.deltaY;

                    // İpucu kullanıldıktan sonra gizle
                    if (scrollHint) {
                        scrollHint.classList.remove('show');
                    }
                }
            }, { passive: false });

            // Touch scroll - Mobil
            let touchStartX = 0;
            let scrollStartX = 0;
            let hasTouched = false;

            categoryTabs.addEventListener('touchstart', function(e) {
                touchStartX = e.touches[0].clientX;
                scrollStartX = this.scrollLeft;
                hasTouched = true;
            });

            categoryTabs.addEventListener('touchmove', function(e) {
                if (e.touches.length === 1) {
                    const touchX = e.touches[0].clientX;
                    const diff = touchStartX - touchX;
                    this.scrollLeft = scrollStartX + diff;

                    // İpucu kullanıldıktan sonra gizle
                    if (hasTouched && scrollHint) {
                        scrollHint.classList.remove('show');
                    }
                }
            });

            // Mouse enter/leave ile ipucu göster
            categoryTabs.addEventListener('mouseenter', function() {
                const isScrollable = this.scrollWidth > this.clientWidth;
                if (isScrollable && scrollHint && !scrollHint.classList.contains('used')) {
                    scrollHint.classList.add('show');
                }
            });

            categoryTabs.addEventListener('mouseleave', function() {
                if (scrollHint) {
                    scrollHint.classList.remove('show');
                }
            });

            // Scroll kullanıldığında ipucunu kalıcı gizle
            categoryTabs.addEventListener('scroll', function() {
                if (scrollHint) {
                    scrollHint.classList.add('used');
                    scrollHint.classList.remove('show');
                }
            });
        }
    });
        // Header Search Enhanced Functionality
    document.addEventListener('DOMContentLoaded', function() {
        const searchForm = document.querySelector('.compact-search-form');
        const searchBtn = document.querySelector('.compact-search-btn');
        const searchInput = document.querySelector('.compact-search-input');

        if (searchForm && searchBtn && searchInput) {
            // Loading animation
            searchForm.addEventListener('submit', function() {
                searchBtn.classList.add('loading');
                searchForm.classList.add('searching');
            });

            // Input focus effects
            searchInput.addEventListener('focus', function() {
                searchForm.classList.add('focused');
            });

            searchInput.addEventListener('blur', function() {
                searchForm.classList.remove('focused');
            });

            // Enter key handling
            searchInput.addEventListener('keypress', function(e) {
                if (e.key === 'Enter') {
                    e.preventDefault();
                    searchForm.submit();
                }
            });
        }
    });

</script>